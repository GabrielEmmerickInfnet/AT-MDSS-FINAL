name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main
      - nova-funcionalidade  # Defina as branches que irão acionar o workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configura o JDK 17 (ou a versão que o projeto usa)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Compilar a aplicação com Maven
    - name: Build with Maven
      run: mvn clean install

    # Login no Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Criar e publicar a imagem Docker
    - name: Build and Push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:latest

  deploy:
    needs: build  # Este job só começa após o job de build
    runs-on: ubuntu-latest

    steps:
    # Configurar o kubeconfig para acessar o cluster Kubernetes
    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

    # Aplicar o arquivo de Deployment no Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/my-app my-app=${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:latest
        kubectl rollout restart deployment my-app
